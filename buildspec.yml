version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 20
    commands:
      - echo "Instalando Docker..."
      - sudo dnf install -y docker
      - sudo dockerd &  # Inicia o Docker em background sem systemd
      - sleep 10  # Espera o Docker inicializar
      - docker --version  # Verifica se o Docker está funcionando
      - npm install -g @nestjs/cli

  pre_build:
    commands:
      - echo "Autenticando no ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo "Instalando dependências..."
      - npm install --legacy-peer-deps
      - npm run build
      - echo "PGSSLMODE is $PGSSLMODE"
      - node -e "console.log('sslmode via libpq:', process.env.PGSSLMODE)"


  build:
    commands:
      - echo "Construindo imagem Docker..."
      - export IMAGE_TAG=${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - echo "BUILD_ID será $IMAGE_TAG"
      - echo "Building Docker image..."
      - docker build \
          --build-arg BUILD_ID=$IMAGE_TAG \
          -t ${ECR_REPO_URI}:$IMAGE_TAG \
          -t ${ECR_REPO_URI}:latest \
          .

  post_build:
    commands:
      - echo "Enviando imagem para ECR..."
      - docker push ${ECR_REPO_URI}:$IMAGE_TAG
      - docker push ${ECR_REPO_URI}:latest

cache:
  paths:
    - node_modules/**/*
    - dist/**/*